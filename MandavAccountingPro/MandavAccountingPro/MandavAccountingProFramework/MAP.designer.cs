#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MandavAccountingProFramework
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Accounts")]
	public partial class MAPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertOrganization(Organization instance);
    partial void UpdateOrganization(Organization instance);
    partial void DeleteOrganization(Organization instance);
    #endregion
		
		public MAPDataContext() : 
				base(global::MandavAccountingProFramework.Properties.Settings.Default.AccountsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MAPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MAPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MAPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MAPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<Organization> Organizations
		{
			get
			{
				return this.GetTable<Organization>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetOrganizations")]
		public ISingleResult<GetOrganizationsResult> GetOrganizations()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetOrganizationsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.State")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateID;
		
		private string _StateName;
		
		private System.Nullable<int> _CountryID;
		
		private EntitySet<Organization> _Organizations;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    #endregion
		
		public State()
		{
			this._Organizations = new EntitySet<Organization>(new Action<Organization>(this.attach_Organizations), new Action<Organization>(this.detach_Organizations));
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(50)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Organization", Storage="_Organizations", ThisKey="StateID", OtherKey="OrgStateID")]
		public EntitySet<Organization> Organizations
		{
			get
			{
				return this._Organizations;
			}
			set
			{
				this._Organizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_State", Storage="_Country", ThisKey="CountryID", OtherKey="CountryID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.States.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.States.Add(this);
						this._CountryID = value.CountryID;
					}
					else
					{
						this._CountryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountryID;
		
		private string _CountryName;
		
		private System.Nullable<int> _SortOrder;
		
		private EntitySet<State> _States;
		
		private EntitySet<Organization> _Organizations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    #endregion
		
		public Country()
		{
			this._States = new EntitySet<State>(new Action<State>(this.attach_States), new Action<State>(this.detach_States));
			this._Organizations = new EntitySet<Organization>(new Action<Organization>(this.attach_Organizations), new Action<Organization>(this.detach_Organizations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(50)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_State", Storage="_States", ThisKey="CountryID", OtherKey="CountryID")]
		public EntitySet<State> States
		{
			get
			{
				return this._States;
			}
			set
			{
				this._States.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Organization", Storage="_Organizations", ThisKey="CountryID", OtherKey="OrgCountryID")]
		public EntitySet<Organization> Organizations
		{
			get
			{
				return this._Organizations;
			}
			set
			{
				this._Organizations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CurrencyId;
		
		private string _CurrencyFormalName;
		
		private string _CurrencySymbol;
		
		private string _CurrencyShortName;
		
		private EntitySet<Organization> _Organizations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrencyIdChanging(int value);
    partial void OnCurrencyIdChanged();
    partial void OnCurrencyFormalNameChanging(string value);
    partial void OnCurrencyFormalNameChanged();
    partial void OnCurrencySymbolChanging(string value);
    partial void OnCurrencySymbolChanged();
    partial void OnCurrencyShortNameChanging(string value);
    partial void OnCurrencyShortNameChanged();
    #endregion
		
		public Currency()
		{
			this._Organizations = new EntitySet<Organization>(new Action<Organization>(this.attach_Organizations), new Action<Organization>(this.detach_Organizations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CurrencyId
		{
			get
			{
				return this._CurrencyId;
			}
			set
			{
				if ((this._CurrencyId != value))
				{
					this.OnCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyId = value;
					this.SendPropertyChanged("CurrencyId");
					this.OnCurrencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyFormalName", DbType="NVarChar(50)")]
		public string CurrencyFormalName
		{
			get
			{
				return this._CurrencyFormalName;
			}
			set
			{
				if ((this._CurrencyFormalName != value))
				{
					this.OnCurrencyFormalNameChanging(value);
					this.SendPropertyChanging();
					this._CurrencyFormalName = value;
					this.SendPropertyChanged("CurrencyFormalName");
					this.OnCurrencyFormalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencySymbol", DbType="NVarChar(10)")]
		public string CurrencySymbol
		{
			get
			{
				return this._CurrencySymbol;
			}
			set
			{
				if ((this._CurrencySymbol != value))
				{
					this.OnCurrencySymbolChanging(value);
					this.SendPropertyChanging();
					this._CurrencySymbol = value;
					this.SendPropertyChanged("CurrencySymbol");
					this.OnCurrencySymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyShortName", DbType="NVarChar(50)")]
		public string CurrencyShortName
		{
			get
			{
				return this._CurrencyShortName;
			}
			set
			{
				if ((this._CurrencyShortName != value))
				{
					this.OnCurrencyShortNameChanging(value);
					this.SendPropertyChanging();
					this._CurrencyShortName = value;
					this.SendPropertyChanged("CurrencyShortName");
					this.OnCurrencyShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Organization", Storage="_Organizations", ThisKey="CurrencyId", OtherKey="CurrencyID")]
		public EntitySet<Organization> Organizations
		{
			get
			{
				return this._Organizations;
			}
			set
			{
				this._Organizations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organization")]
	public partial class Organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrgID;
		
		private string _OrgName;
		
		private string _OrgMailingName;
		
		private string _OrgAddress;
		
		private System.Nullable<int> _OrgCountryID;
		
		private System.Nullable<int> _OrgStateID;
		
		private string _OrgPincode;
		
		private string _OrgPhoneNumber;
		
		private string _OrgMobile;
		
		private string _OrgFaxNo;
		
		private string _OrgEmail;
		
		private string _OrgWebsite;
		
		private string _Password;
		
		private string _OrgPanNo;
		
		private string _OrgSaleTaxNo;
		
		private string _OrgVatID;
		
		private System.Nullable<int> _CurrencyID;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<State> _State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgIDChanging(int value);
    partial void OnOrgIDChanged();
    partial void OnOrgNameChanging(string value);
    partial void OnOrgNameChanged();
    partial void OnOrgMailingNameChanging(string value);
    partial void OnOrgMailingNameChanged();
    partial void OnOrgAddressChanging(string value);
    partial void OnOrgAddressChanged();
    partial void OnOrgCountryIDChanging(System.Nullable<int> value);
    partial void OnOrgCountryIDChanged();
    partial void OnOrgStateIDChanging(System.Nullable<int> value);
    partial void OnOrgStateIDChanged();
    partial void OnOrgPincodeChanging(string value);
    partial void OnOrgPincodeChanged();
    partial void OnOrgPhoneNumberChanging(string value);
    partial void OnOrgPhoneNumberChanged();
    partial void OnOrgMobileChanging(string value);
    partial void OnOrgMobileChanged();
    partial void OnOrgFaxNoChanging(string value);
    partial void OnOrgFaxNoChanged();
    partial void OnOrgEmailChanging(string value);
    partial void OnOrgEmailChanged();
    partial void OnOrgWebsiteChanging(string value);
    partial void OnOrgWebsiteChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnOrgPanNoChanging(string value);
    partial void OnOrgPanNoChanged();
    partial void OnOrgSaleTaxNoChanging(string value);
    partial void OnOrgSaleTaxNoChanged();
    partial void OnOrgVatIDChanging(string value);
    partial void OnOrgVatIDChanged();
    partial void OnCurrencyIDChanging(System.Nullable<int> value);
    partial void OnCurrencyIDChanged();
    #endregion
		
		public Organization()
		{
			this._Country = default(EntityRef<Country>);
			this._Currency = default(EntityRef<Currency>);
			this._State = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgName", DbType="NVarChar(50)")]
		public string OrgName
		{
			get
			{
				return this._OrgName;
			}
			set
			{
				if ((this._OrgName != value))
				{
					this.OnOrgNameChanging(value);
					this.SendPropertyChanging();
					this._OrgName = value;
					this.SendPropertyChanged("OrgName");
					this.OnOrgNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgMailingName", DbType="NVarChar(50)")]
		public string OrgMailingName
		{
			get
			{
				return this._OrgMailingName;
			}
			set
			{
				if ((this._OrgMailingName != value))
				{
					this.OnOrgMailingNameChanging(value);
					this.SendPropertyChanging();
					this._OrgMailingName = value;
					this.SendPropertyChanged("OrgMailingName");
					this.OnOrgMailingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgAddress", DbType="NVarChar(50)")]
		public string OrgAddress
		{
			get
			{
				return this._OrgAddress;
			}
			set
			{
				if ((this._OrgAddress != value))
				{
					this.OnOrgAddressChanging(value);
					this.SendPropertyChanging();
					this._OrgAddress = value;
					this.SendPropertyChanged("OrgAddress");
					this.OnOrgAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgCountryID", DbType="Int")]
		public System.Nullable<int> OrgCountryID
		{
			get
			{
				return this._OrgCountryID;
			}
			set
			{
				if ((this._OrgCountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgCountryIDChanging(value);
					this.SendPropertyChanging();
					this._OrgCountryID = value;
					this.SendPropertyChanged("OrgCountryID");
					this.OnOrgCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgStateID", DbType="Int")]
		public System.Nullable<int> OrgStateID
		{
			get
			{
				return this._OrgStateID;
			}
			set
			{
				if ((this._OrgStateID != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgStateIDChanging(value);
					this.SendPropertyChanging();
					this._OrgStateID = value;
					this.SendPropertyChanged("OrgStateID");
					this.OnOrgStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgPincode", DbType="NVarChar(50)")]
		public string OrgPincode
		{
			get
			{
				return this._OrgPincode;
			}
			set
			{
				if ((this._OrgPincode != value))
				{
					this.OnOrgPincodeChanging(value);
					this.SendPropertyChanging();
					this._OrgPincode = value;
					this.SendPropertyChanged("OrgPincode");
					this.OnOrgPincodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgPhoneNumber", DbType="NVarChar(50)")]
		public string OrgPhoneNumber
		{
			get
			{
				return this._OrgPhoneNumber;
			}
			set
			{
				if ((this._OrgPhoneNumber != value))
				{
					this.OnOrgPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._OrgPhoneNumber = value;
					this.SendPropertyChanged("OrgPhoneNumber");
					this.OnOrgPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgMobile", DbType="NVarChar(50)")]
		public string OrgMobile
		{
			get
			{
				return this._OrgMobile;
			}
			set
			{
				if ((this._OrgMobile != value))
				{
					this.OnOrgMobileChanging(value);
					this.SendPropertyChanging();
					this._OrgMobile = value;
					this.SendPropertyChanged("OrgMobile");
					this.OnOrgMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgFaxNo", DbType="NVarChar(50)")]
		public string OrgFaxNo
		{
			get
			{
				return this._OrgFaxNo;
			}
			set
			{
				if ((this._OrgFaxNo != value))
				{
					this.OnOrgFaxNoChanging(value);
					this.SendPropertyChanging();
					this._OrgFaxNo = value;
					this.SendPropertyChanged("OrgFaxNo");
					this.OnOrgFaxNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgEmail", DbType="NVarChar(50)")]
		public string OrgEmail
		{
			get
			{
				return this._OrgEmail;
			}
			set
			{
				if ((this._OrgEmail != value))
				{
					this.OnOrgEmailChanging(value);
					this.SendPropertyChanging();
					this._OrgEmail = value;
					this.SendPropertyChanged("OrgEmail");
					this.OnOrgEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgWebsite", DbType="NVarChar(50)")]
		public string OrgWebsite
		{
			get
			{
				return this._OrgWebsite;
			}
			set
			{
				if ((this._OrgWebsite != value))
				{
					this.OnOrgWebsiteChanging(value);
					this.SendPropertyChanging();
					this._OrgWebsite = value;
					this.SendPropertyChanged("OrgWebsite");
					this.OnOrgWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgPanNo", DbType="NVarChar(50)")]
		public string OrgPanNo
		{
			get
			{
				return this._OrgPanNo;
			}
			set
			{
				if ((this._OrgPanNo != value))
				{
					this.OnOrgPanNoChanging(value);
					this.SendPropertyChanging();
					this._OrgPanNo = value;
					this.SendPropertyChanged("OrgPanNo");
					this.OnOrgPanNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgSaleTaxNo", DbType="NVarChar(50)")]
		public string OrgSaleTaxNo
		{
			get
			{
				return this._OrgSaleTaxNo;
			}
			set
			{
				if ((this._OrgSaleTaxNo != value))
				{
					this.OnOrgSaleTaxNoChanging(value);
					this.SendPropertyChanging();
					this._OrgSaleTaxNo = value;
					this.SendPropertyChanged("OrgSaleTaxNo");
					this.OnOrgSaleTaxNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgVatID", DbType="NVarChar(50)")]
		public string OrgVatID
		{
			get
			{
				return this._OrgVatID;
			}
			set
			{
				if ((this._OrgVatID != value))
				{
					this.OnOrgVatIDChanging(value);
					this.SendPropertyChanging();
					this._OrgVatID = value;
					this.SendPropertyChanged("OrgVatID");
					this.OnOrgVatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int")]
		public System.Nullable<int> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Organization", Storage="_Country", ThisKey="OrgCountryID", OtherKey="CountryID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Organizations.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Organizations.Add(this);
						this._OrgCountryID = value.CountryID;
					}
					else
					{
						this._OrgCountryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_Organization", Storage="_Currency", ThisKey="CurrencyID", OtherKey="CurrencyId", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.Organizations.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.Organizations.Add(this);
						this._CurrencyID = value.CurrencyId;
					}
					else
					{
						this._CurrencyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Organization", Storage="_State", ThisKey="OrgStateID", OtherKey="StateID", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Organizations.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Organizations.Add(this);
						this._OrgStateID = value.StateID;
					}
					else
					{
						this._OrgStateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetOrganizationsResult
	{
		
		private int _OrgID;
		
		private string _OrgName;
		
		private string _OrgMailingName;
		
		private string _OrgAddress;
		
		private System.Nullable<int> _OrgCountryID;
		
		private System.Nullable<int> _OrgStateID;
		
		private string _OrgPincode;
		
		private string _OrgPhoneNumber;
		
		private string _OrgMobile;
		
		private string _OrgFaxNo;
		
		private string _OrgEmail;
		
		private string _OrgWebsite;
		
		private string _Password;
		
		private string _OrgPanNo;
		
		private string _OrgSaleTaxNo;
		
		private string _OrgVatID;
		
		private System.Nullable<int> _CurrencyID;
		
		private string _CountryName;
		
		private string _StateName;
		
		private string _CurrencySymbol;
		
		private string _CurrencyFormalName;
		
		public GetOrganizationsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="Int NOT NULL")]
		public int OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this._OrgID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgName", DbType="NVarChar(50)")]
		public string OrgName
		{
			get
			{
				return this._OrgName;
			}
			set
			{
				if ((this._OrgName != value))
				{
					this._OrgName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgMailingName", DbType="NVarChar(50)")]
		public string OrgMailingName
		{
			get
			{
				return this._OrgMailingName;
			}
			set
			{
				if ((this._OrgMailingName != value))
				{
					this._OrgMailingName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgAddress", DbType="NVarChar(50)")]
		public string OrgAddress
		{
			get
			{
				return this._OrgAddress;
			}
			set
			{
				if ((this._OrgAddress != value))
				{
					this._OrgAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgCountryID", DbType="Int")]
		public System.Nullable<int> OrgCountryID
		{
			get
			{
				return this._OrgCountryID;
			}
			set
			{
				if ((this._OrgCountryID != value))
				{
					this._OrgCountryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgStateID", DbType="Int")]
		public System.Nullable<int> OrgStateID
		{
			get
			{
				return this._OrgStateID;
			}
			set
			{
				if ((this._OrgStateID != value))
				{
					this._OrgStateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgPincode", DbType="NVarChar(50)")]
		public string OrgPincode
		{
			get
			{
				return this._OrgPincode;
			}
			set
			{
				if ((this._OrgPincode != value))
				{
					this._OrgPincode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgPhoneNumber", DbType="NVarChar(50)")]
		public string OrgPhoneNumber
		{
			get
			{
				return this._OrgPhoneNumber;
			}
			set
			{
				if ((this._OrgPhoneNumber != value))
				{
					this._OrgPhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgMobile", DbType="NVarChar(50)")]
		public string OrgMobile
		{
			get
			{
				return this._OrgMobile;
			}
			set
			{
				if ((this._OrgMobile != value))
				{
					this._OrgMobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgFaxNo", DbType="NVarChar(50)")]
		public string OrgFaxNo
		{
			get
			{
				return this._OrgFaxNo;
			}
			set
			{
				if ((this._OrgFaxNo != value))
				{
					this._OrgFaxNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgEmail", DbType="NVarChar(50)")]
		public string OrgEmail
		{
			get
			{
				return this._OrgEmail;
			}
			set
			{
				if ((this._OrgEmail != value))
				{
					this._OrgEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgWebsite", DbType="NVarChar(50)")]
		public string OrgWebsite
		{
			get
			{
				return this._OrgWebsite;
			}
			set
			{
				if ((this._OrgWebsite != value))
				{
					this._OrgWebsite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgPanNo", DbType="NVarChar(50)")]
		public string OrgPanNo
		{
			get
			{
				return this._OrgPanNo;
			}
			set
			{
				if ((this._OrgPanNo != value))
				{
					this._OrgPanNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgSaleTaxNo", DbType="NVarChar(50)")]
		public string OrgSaleTaxNo
		{
			get
			{
				return this._OrgSaleTaxNo;
			}
			set
			{
				if ((this._OrgSaleTaxNo != value))
				{
					this._OrgSaleTaxNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgVatID", DbType="NVarChar(50)")]
		public string OrgVatID
		{
			get
			{
				return this._OrgVatID;
			}
			set
			{
				if ((this._OrgVatID != value))
				{
					this._OrgVatID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int")]
		public System.Nullable<int> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this._CurrencyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(50)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="NVarChar(50)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this._StateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencySymbol", DbType="NVarChar(10)")]
		public string CurrencySymbol
		{
			get
			{
				return this._CurrencySymbol;
			}
			set
			{
				if ((this._CurrencySymbol != value))
				{
					this._CurrencySymbol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyFormalName", DbType="NVarChar(50)")]
		public string CurrencyFormalName
		{
			get
			{
				return this._CurrencyFormalName;
			}
			set
			{
				if ((this._CurrencyFormalName != value))
				{
					this._CurrencyFormalName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
